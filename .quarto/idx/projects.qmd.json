{"title":"PROJECT","markdown":{"yaml":{"title":"PROJECT","format":"dashboard"},"headingText":"visual_Redesign1","containsRefs":false,"markdown":"\n\n\n## row{.tabset}\n\n### tab1\n#### row1\n\n<img src=\"project_tab1.png\" alt=\"Description of Image\" width=\"50%\">\n\n#### row2\n```{r}\n#NEW_GRAPH\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n\n# Data for the donut chart\nmeal_summary <- data.frame(\n  Type = c(\"Breakfast\", \"Lunch\", \"Dinner\", \"Snacks\", \"Caloreies left\"),\n  Calories = c(1488, 704, 905, 303, 100)  # Total calories\n  #Percentage = c(43, 21, 27, 10)  # Percentages\n)\n\nmeal_summary <- meal_summary %>%\n  mutate(Percentage = round((Calories/3500)*100))\n\n# Step 1: Calculate the midpoint of the labels\nmeal_summary <- meal_summary %>%\n  arrange(desc(Type)) %>%\n  mutate(ypos = cumsum(Percentage) - 0.5 * Percentage)\n\n# Step 2: Create the donut chart\nggplot(meal_summary, aes(x = 2, y = Percentage, fill = Type)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  coord_polar(\"y\", start = 0) +  # Make it circular\n  xlim(0.5, 2.5) +  # Create a hole in the middle\n  geom_text(aes(y = ypos, label = paste0(Percentage, \"%\")), color = \"white\", size = 5) +  # Percentage labels\n  theme_void() +  # Remove background and axis\n  theme(legend.position = \"right\") +\n  scale_fill_brewer(palette = \"Set2\")  +\n  labs(title = \"Calories Distribution by Meal Type(NEW_VISUAL)\")\n\n```\n\n\n### tab2\n#### row1\n\n<img src=\"project_tab1.png\" alt=\"Description of Image\" width=\"50%\">\n\n#### row2\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nmeal_data <- data.frame(\n  Meal_name = c(\"Brown Bread\", \"Boiled eggs\", \"Egg whites\", \"Rice\", \"Curry\", \"Curd\", \"Chicken breast\", \"Rice\", \n                \"Curry\", \"Chicken breast\", \"Milk\", \"Whey protein\", \"Almonds\", \"Boiled Eggs\", \"Banana\", \"Oats\", \"Peanut butter\"),\n  Quantity = c(\"2\", \"2\", \"4\", \"2 cups\", \"1 bowl\", \"100 gms\", \"200 gms\", \"2.25 cups\", \"1 bowl\", \"75 gms\", \"10 oz\", \n               \"66 gms\", \"10 gms\", \"2\", \"1\", \"130 gms\", \"20 gms\"),\n  Calories = c(121, 143, 69, 400, 186, 61, 288, 450, 186, 108, 188, 124, 69, 143, 105, 502, 129),\n  Type = c(\"snack\", \"snack\", \"snack\", \"Dinner\", \"Dinner\", \"Dinner\", \"Dinner\", \"Lunch\", \"Lunch\", \"Lunch\", \n           \"Breakfast\", \"Breakfast\", \"Breakfast\", \"Breakfast\", \"Breakfast\", \"Breakfast\", \"Breakfast\")\n)\n\n\n# Step 1: Calculate the percentage of calories for each meal within each Type\nmeal_data <- meal_data %>%\n  group_by(Type) %>%\n  mutate(Percentage = Calories / sum(Calories) * 100)\n\ncustom_colors <- c(\"red\", \"blue\", \"green\", \"yellow\", \"purple\", \"orange\", \"pink\", \"brown\", \n                   \"cyan\", \"magenta\", \"grey\", \"darkgreen\", \"lightblue\", \"darkred\", \"lightgreen\")\n# Step 2: Create the stacked bar plot with calories and percentage labels\nggplot(meal_data, aes(x = Type, y = Calories, fill = Meal_name)) +\n  geom_bar(stat = \"identity\") + \n  geom_text(aes(label = paste0(Calories, \" cal (\", round(Percentage, 1), \"%)\")),\n            position = position_stack(vjust = 0.5), size = 3) +  # Add calorie and percentage labels\n  labs(title = \"Calories and Percentage per Meal Type\",\n       x = \"Meal Type\", \n       y = \"Calories\") +\n  theme_minimal() +\n  scale_fill_manual(values = custom_colors)\n```\n\n\n### tab3\n```{r}\n\n```\n\n\n# visual_Redesign2\n## ROW{.tabset}\n### tab1\n#### row1\n\n<img src=\"project_visual1.png\" alt=\"Description of Image\" width=\"50%\">\n\n#### row2\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(gridExtra)\nlibrary(ggimage)\nlibrary(tidyverse)\n\n\n# Visualization for figure 1: Data frame for market share\nmarket_data <- data.frame(\n  Country = c(\"Norway\", \"Iceland\", \"Sweden\", \"Denmark\", \"Netherlands\", \"Belgium\", \"Finland\", \"Switzerland\"),\n  Market_Share = c(29, 18, 11, 11, 8.3, 8.2, 8.1, 5.8),\n  Flag_URL = c('norway.png',\n               'iceland.png',\n               'sweden.png',\n               'denmark.png',\n               'netherlands.png',\n               'belgium.png',\n               'finland.png',\n               'swiss.png')\n)\n\n# Horizontal bar chart for market share\nplot1=ggplot(market_data, aes(x = reorder(Country, Market_Share), y = Market_Share)) +\n  geom_bar(stat = \"identity\", fill = \"seagreen\") +\n  geom_image(aes(image = Flag_URL), size = 0.05) +  # Removed 'by' argument\n  labs(title = \"Top Markets by PEV Market Share (December 2023)\",\n       x = \"Country\", y = \"Percentage of Plug-in  Cars in Use\") +\n  theme_minimal()\n\n\n\nsales_data <- data.frame(\n  Country = c(\"USA\", \"World\", \"Europe\", \"France\", \"UK\", \"Germany\", \"China\"),\n  Sales_Volume = c(2.1, 3.2, 3.8, 4.1, 5.0, 5.4, 7.6),\n  Flag_URL1 = c('usa.png','world.png',\n                'europe.png','france.png',\n                'uk.png','germeny.png',\n                'china.png')\n)\n\n#sales volume\nplot2=ggplot(sales_data, aes(x = reorder(Country, Sales_Volume), y = Sales_Volume)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  geom_image(aes(image = Flag_URL1), size = 0.05) +\n  labs(title = \"Top Markets by PEV Sales Volume (December 2023)\",\n       x = \"Country\", y = \"Percentage of Plug-in Cars in Use\") +\n  theme_minimal()\n\n#plot\ngrid.arrange(plot1, plot2, ncol = 1)\n```\n\n\n### tab2\n#### row1\n\n<img src=\"project_visual1.png\" alt=\"Description of Image\" width=\"50%\">\n\n#### row2\n```{r}\n\nlibrary(plotly)\n\n# Data for the PEV volume by country\npev_data <- data.frame(\n  Country = c(\"USA\", \"France\", \"UK\", \"Germany\", \"China\", \"Norway\", \"Iceland\", \n              \"Sweden\", \"Denmark\", \"Netherlands\", \"Belgium\", \"Finland\", \"Switzerland\"),\n  Code = c(\"USA\", \"FRA\", \"GBR\", \"DEU\", \"CHN\", \"NOR\", \"ISL\", \n           \"SWE\", \"DNK\", \"NLD\", \"BEL\", \"FIN\", \"CHE\"),\n  PEV_Share = c(2.1, 4.1, 5.0, 5.4, 7.6, 29, 18, 11, 11, 8.3, 8.2, 8.1, 5.8)\n)\n\n# Create the choropleth map for PEV Share\nfig <- plot_ly(pev_data, \n               type = 'choropleth', \n               locations = ~Code, \n               z = ~PEV_Share, \n               text = ~paste(Country, \"<br>PEV Share:\", PEV_Share, \"%\"),\n               colorscale = 'Greens', \n               autocolorscale = FALSE, \n               reversescale = TRUE, \n               marker = list(line = list(color = 'rgb(180,180,180)', width = 0.5)),\n               colorbar = list(title = 'PEV Volume (%)'))\n\n# Update the layout for the PEV map\nfig <- fig %>% layout(\n  title = 'PEV Volume by Country',\n  geo = list(\n    showframe = FALSE,\n    showcoastlines = TRUE,\n    showland = TRUE,\n    landcolor = \"rgb(217, 217, 217)\",\n    coastlinecolor = \"rgb(180, 180, 180)\",\n    projection = list(type = 'Mercator'),\n    countrycolor = 'rgb(180, 180, 180)',\n    countrywidth = 0.5\n  )\n)\n\n# Data for the Market Share by country\nmarket_share <- data.frame(\n  Country = c(\"Norway\", \"Iceland\", \"Sweden\", \"Denmark\", \"Netherlands\", \"Belgium\", \"Finland\", \"Switzerland\"),\n  Code = c(\"NOR\", \"ISL\", \"SWE\", \"DNK\", \"NLD\", \"BEL\", \"FIN\", \"CHE\"),\n  Market_Share = c(29, 18, 11, 11, 8.3, 8.2, 8.1, 5.8)\n)\n\n# Create the choropleth map for Market Share\nfig2 <- plot_ly(market_share, \n                 type = 'choropleth', \n                 locations = ~Code, \n                 z = ~Market_Share, \n                 text = ~paste(Country, \"<br>Market Share:\", Market_Share, \"%\"),\n                 colorscale = 'Blues',\n                 autocolorscale = FALSE, \n                 reversescale = TRUE, \n                 marker = list(line = list(color = 'rgb(180,180,180)', width = 0.5)),\n                 colorbar = list(title = 'Market Share (%)'))\n\n# Update the layout for the Market Share map\nfig2 <- fig2 %>% layout(\n  title = 'Market Share by Country',\n  geo = list(\n    showframe = FALSE,\n    showcoastlines = TRUE,\n    showland = TRUE,\n    landcolor = \"rgb(217, 217, 217)\",\n    coastlinecolor = \"rgb(180, 180, 180)\",\n    projection = list(type = 'Mercator'),\n    countrycolor = 'rgb(180, 180, 180)',\n    countrywidth = 0.5\n  )\n)\n\n# Create a subplot to show both maps side by side\ncombined_fig <- subplot(fig, fig2, nrows = 1, margin = 0.05)\n\n# Show the combined plot\ncombined_fig\n\n```\n\n### tab3\n```{r}\n\n```\n\n\n# video\n\n\n## column1{height=30%}\n```{r}\nplot(iris)\n```\n\n\n\n\n## column2{height=70%}\nhellloooooooooooo\nhelloooooooo\n\n\n\n","srcMarkdownNoYaml":"\n\n# visual_Redesign1\n\n## row{.tabset}\n\n### tab1\n#### row1\n\n<img src=\"project_tab1.png\" alt=\"Description of Image\" width=\"50%\">\n\n#### row2\n```{r}\n#NEW_GRAPH\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n\n# Data for the donut chart\nmeal_summary <- data.frame(\n  Type = c(\"Breakfast\", \"Lunch\", \"Dinner\", \"Snacks\", \"Caloreies left\"),\n  Calories = c(1488, 704, 905, 303, 100)  # Total calories\n  #Percentage = c(43, 21, 27, 10)  # Percentages\n)\n\nmeal_summary <- meal_summary %>%\n  mutate(Percentage = round((Calories/3500)*100))\n\n# Step 1: Calculate the midpoint of the labels\nmeal_summary <- meal_summary %>%\n  arrange(desc(Type)) %>%\n  mutate(ypos = cumsum(Percentage) - 0.5 * Percentage)\n\n# Step 2: Create the donut chart\nggplot(meal_summary, aes(x = 2, y = Percentage, fill = Type)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  coord_polar(\"y\", start = 0) +  # Make it circular\n  xlim(0.5, 2.5) +  # Create a hole in the middle\n  geom_text(aes(y = ypos, label = paste0(Percentage, \"%\")), color = \"white\", size = 5) +  # Percentage labels\n  theme_void() +  # Remove background and axis\n  theme(legend.position = \"right\") +\n  scale_fill_brewer(palette = \"Set2\")  +\n  labs(title = \"Calories Distribution by Meal Type(NEW_VISUAL)\")\n\n```\n\n\n### tab2\n#### row1\n\n<img src=\"project_tab1.png\" alt=\"Description of Image\" width=\"50%\">\n\n#### row2\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nmeal_data <- data.frame(\n  Meal_name = c(\"Brown Bread\", \"Boiled eggs\", \"Egg whites\", \"Rice\", \"Curry\", \"Curd\", \"Chicken breast\", \"Rice\", \n                \"Curry\", \"Chicken breast\", \"Milk\", \"Whey protein\", \"Almonds\", \"Boiled Eggs\", \"Banana\", \"Oats\", \"Peanut butter\"),\n  Quantity = c(\"2\", \"2\", \"4\", \"2 cups\", \"1 bowl\", \"100 gms\", \"200 gms\", \"2.25 cups\", \"1 bowl\", \"75 gms\", \"10 oz\", \n               \"66 gms\", \"10 gms\", \"2\", \"1\", \"130 gms\", \"20 gms\"),\n  Calories = c(121, 143, 69, 400, 186, 61, 288, 450, 186, 108, 188, 124, 69, 143, 105, 502, 129),\n  Type = c(\"snack\", \"snack\", \"snack\", \"Dinner\", \"Dinner\", \"Dinner\", \"Dinner\", \"Lunch\", \"Lunch\", \"Lunch\", \n           \"Breakfast\", \"Breakfast\", \"Breakfast\", \"Breakfast\", \"Breakfast\", \"Breakfast\", \"Breakfast\")\n)\n\n\n# Step 1: Calculate the percentage of calories for each meal within each Type\nmeal_data <- meal_data %>%\n  group_by(Type) %>%\n  mutate(Percentage = Calories / sum(Calories) * 100)\n\ncustom_colors <- c(\"red\", \"blue\", \"green\", \"yellow\", \"purple\", \"orange\", \"pink\", \"brown\", \n                   \"cyan\", \"magenta\", \"grey\", \"darkgreen\", \"lightblue\", \"darkred\", \"lightgreen\")\n# Step 2: Create the stacked bar plot with calories and percentage labels\nggplot(meal_data, aes(x = Type, y = Calories, fill = Meal_name)) +\n  geom_bar(stat = \"identity\") + \n  geom_text(aes(label = paste0(Calories, \" cal (\", round(Percentage, 1), \"%)\")),\n            position = position_stack(vjust = 0.5), size = 3) +  # Add calorie and percentage labels\n  labs(title = \"Calories and Percentage per Meal Type\",\n       x = \"Meal Type\", \n       y = \"Calories\") +\n  theme_minimal() +\n  scale_fill_manual(values = custom_colors)\n```\n\n\n### tab3\n```{r}\n\n```\n\n\n# visual_Redesign2\n## ROW{.tabset}\n### tab1\n#### row1\n\n<img src=\"project_visual1.png\" alt=\"Description of Image\" width=\"50%\">\n\n#### row2\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(gridExtra)\nlibrary(ggimage)\nlibrary(tidyverse)\n\n\n# Visualization for figure 1: Data frame for market share\nmarket_data <- data.frame(\n  Country = c(\"Norway\", \"Iceland\", \"Sweden\", \"Denmark\", \"Netherlands\", \"Belgium\", \"Finland\", \"Switzerland\"),\n  Market_Share = c(29, 18, 11, 11, 8.3, 8.2, 8.1, 5.8),\n  Flag_URL = c('norway.png',\n               'iceland.png',\n               'sweden.png',\n               'denmark.png',\n               'netherlands.png',\n               'belgium.png',\n               'finland.png',\n               'swiss.png')\n)\n\n# Horizontal bar chart for market share\nplot1=ggplot(market_data, aes(x = reorder(Country, Market_Share), y = Market_Share)) +\n  geom_bar(stat = \"identity\", fill = \"seagreen\") +\n  geom_image(aes(image = Flag_URL), size = 0.05) +  # Removed 'by' argument\n  labs(title = \"Top Markets by PEV Market Share (December 2023)\",\n       x = \"Country\", y = \"Percentage of Plug-in  Cars in Use\") +\n  theme_minimal()\n\n\n\nsales_data <- data.frame(\n  Country = c(\"USA\", \"World\", \"Europe\", \"France\", \"UK\", \"Germany\", \"China\"),\n  Sales_Volume = c(2.1, 3.2, 3.8, 4.1, 5.0, 5.4, 7.6),\n  Flag_URL1 = c('usa.png','world.png',\n                'europe.png','france.png',\n                'uk.png','germeny.png',\n                'china.png')\n)\n\n#sales volume\nplot2=ggplot(sales_data, aes(x = reorder(Country, Sales_Volume), y = Sales_Volume)) +\n  geom_bar(stat = \"identity\", fill = \"lightblue\") +\n  geom_image(aes(image = Flag_URL1), size = 0.05) +\n  labs(title = \"Top Markets by PEV Sales Volume (December 2023)\",\n       x = \"Country\", y = \"Percentage of Plug-in Cars in Use\") +\n  theme_minimal()\n\n#plot\ngrid.arrange(plot1, plot2, ncol = 1)\n```\n\n\n### tab2\n#### row1\n\n<img src=\"project_visual1.png\" alt=\"Description of Image\" width=\"50%\">\n\n#### row2\n```{r}\n\nlibrary(plotly)\n\n# Data for the PEV volume by country\npev_data <- data.frame(\n  Country = c(\"USA\", \"France\", \"UK\", \"Germany\", \"China\", \"Norway\", \"Iceland\", \n              \"Sweden\", \"Denmark\", \"Netherlands\", \"Belgium\", \"Finland\", \"Switzerland\"),\n  Code = c(\"USA\", \"FRA\", \"GBR\", \"DEU\", \"CHN\", \"NOR\", \"ISL\", \n           \"SWE\", \"DNK\", \"NLD\", \"BEL\", \"FIN\", \"CHE\"),\n  PEV_Share = c(2.1, 4.1, 5.0, 5.4, 7.6, 29, 18, 11, 11, 8.3, 8.2, 8.1, 5.8)\n)\n\n# Create the choropleth map for PEV Share\nfig <- plot_ly(pev_data, \n               type = 'choropleth', \n               locations = ~Code, \n               z = ~PEV_Share, \n               text = ~paste(Country, \"<br>PEV Share:\", PEV_Share, \"%\"),\n               colorscale = 'Greens', \n               autocolorscale = FALSE, \n               reversescale = TRUE, \n               marker = list(line = list(color = 'rgb(180,180,180)', width = 0.5)),\n               colorbar = list(title = 'PEV Volume (%)'))\n\n# Update the layout for the PEV map\nfig <- fig %>% layout(\n  title = 'PEV Volume by Country',\n  geo = list(\n    showframe = FALSE,\n    showcoastlines = TRUE,\n    showland = TRUE,\n    landcolor = \"rgb(217, 217, 217)\",\n    coastlinecolor = \"rgb(180, 180, 180)\",\n    projection = list(type = 'Mercator'),\n    countrycolor = 'rgb(180, 180, 180)',\n    countrywidth = 0.5\n  )\n)\n\n# Data for the Market Share by country\nmarket_share <- data.frame(\n  Country = c(\"Norway\", \"Iceland\", \"Sweden\", \"Denmark\", \"Netherlands\", \"Belgium\", \"Finland\", \"Switzerland\"),\n  Code = c(\"NOR\", \"ISL\", \"SWE\", \"DNK\", \"NLD\", \"BEL\", \"FIN\", \"CHE\"),\n  Market_Share = c(29, 18, 11, 11, 8.3, 8.2, 8.1, 5.8)\n)\n\n# Create the choropleth map for Market Share\nfig2 <- plot_ly(market_share, \n                 type = 'choropleth', \n                 locations = ~Code, \n                 z = ~Market_Share, \n                 text = ~paste(Country, \"<br>Market Share:\", Market_Share, \"%\"),\n                 colorscale = 'Blues',\n                 autocolorscale = FALSE, \n                 reversescale = TRUE, \n                 marker = list(line = list(color = 'rgb(180,180,180)', width = 0.5)),\n                 colorbar = list(title = 'Market Share (%)'))\n\n# Update the layout for the Market Share map\nfig2 <- fig2 %>% layout(\n  title = 'Market Share by Country',\n  geo = list(\n    showframe = FALSE,\n    showcoastlines = TRUE,\n    showland = TRUE,\n    landcolor = \"rgb(217, 217, 217)\",\n    coastlinecolor = \"rgb(180, 180, 180)\",\n    projection = list(type = 'Mercator'),\n    countrycolor = 'rgb(180, 180, 180)',\n    countrywidth = 0.5\n  )\n)\n\n# Create a subplot to show both maps side by side\ncombined_fig <- subplot(fig, fig2, nrows = 1, margin = 0.05)\n\n# Show the combined plot\ncombined_fig\n\n```\n\n### tab3\n```{r}\n\n```\n\n\n# video\n\n\n## column1{height=30%}\n```{r}\nplot(iris)\n```\n\n\n\n\n## column2{height=70%}\nhellloooooooooooo\nhelloooooooo\n\n\n\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"projects.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","page-layout":"custom","editor":"visual","title":"PROJECT"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}